<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBorrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAFoSURBVEhL7ZW7TsMwFIYzxnaQiJ0ORUVMDMAAEhNMsHFZ
        YGaBhY2hSNDYjtQJqcDE0ldgZ2DjIegTcf7EhlLapAF1AT7pyL/tc/FxlCT4G8TcnEth+lLoXmGmjzW3
        /XMks3dOvjNurZKEm3063a3ipvPZ9EAJ/TxskpvXUT/JdK/B0z2X7ivU/r2T36Y0hxL2RAr7RKd7GT1x
        lSGG7BE5XLrx0DUdzvPOuptOTYObjYSnB246mTi023SKHa8paBOaWr/ACLzGHnygqYvdOEy3oEuRkV5V
        TB9BDwdJrg1G4DX24JOvMXMso2wFuhTFrhboLk9zXacAT8/oepvQpbSCNqMraEPXKRALe7kUdEPoSqgD
        jbFeBx/7lXjn/wIToWdgMdYrUMRMhU8www5mXqBoNxbZWjKXLUP7txt4jT34QNe6IsXSm2bQ5W5aCXwR
        46bV0AdsUUX6gd5o94sst9yXXbdc+K8iCN4AGsqpzADEI5IAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAHvSURBVEhLzZXLMgNBFIazY+cRIjMTc6GUS2FDlbLGygrP
        4O4l3J4CO5d3MZNRCFFlw1P4//Enmcw0k6CKr6orc073Oaf770tK/wInCAPHj9Ztr7bDxu/q8I2v7u9R
        Lj/1O15t2/KjOtojEp/i95jN9qMztCf2cQzHKqw7qn40g4QNJLmoBuGY3DkwZgJjLlmsEoTTcn8N5FhB
        4GvFqy3KVQjHMoaxcpnRzF8rQ7ejcnUNY5LYz1ZCHTGg0cvMszhuvES5jHtiu/EuNZfZwrLqA/rMYeqz
        vNoVN15mm+RE+NG4zAQmgP8FxeflakEf+7JFoMIEijzI/ACOEcojswMrCGepLX4X5CpV/Ggu60tDmTru
        iS7Rqcwc6SJFyQkKnFtuvCozkWcfQQcyjUiSNzaTZGkw5oh7KjOpuAeZDmUa6bHAMSa8I1MS4frLzJGW
        JS2XunPkJOKGIOhZZgcmzYuKoK8x6MauzA94tH7xmN7LbMPLgaVdymxhukxNTH1Ifo3CGzLbNJ8KXne5
        esYOwmUkf3Scuz65OuFDRW1/9NgN30zJZab5XPeyEs48iSl6rpskK8F1555kNz6N7cWT1JxjC2eehToi
        eIuni3uDJOfQ94SN3/A9sw/25qead0t56NbDqtaQNPnT5zd96v5LSqV3P/gZojqx0okAAAAASUVORK5C
        YII=
</value>
  </data>
</root>